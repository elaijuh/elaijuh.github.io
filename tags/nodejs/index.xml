<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>moo...</title>
    <link>http://blog.hujiale.me/tags/nodejs/index.xml</link>
    <description>Recent content on moo...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Handle HTTP request in multiple processes in NodeJS</title>
      <link>http://blog.hujiale.me/post/handle-http-request-in-multiple-process/</link>
      <pubDate>Tue, 16 Dec 2014 01:28:26 +0800</pubDate>
      
      <guid>http://blog.hujiale.me/post/handle-http-request-in-multiple-process/</guid>
      <description>NodeJS is single process based which is good at frequent IO operations. But single process can&amp;rsquo;t fully utilize multi-core CPU. Luckily we have child-process module in NodeJS to spawn multiple processes. One of the practical examples is handling HTTP request, especially for a large number of concurrent requests. A common way is to use master-worker pattern, a master process working as a proxy to delegate the HTTP requests to child processes with load balance enabled.</description>
    </item>
    
  </channel>
</rss>
